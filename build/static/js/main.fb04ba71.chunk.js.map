{"version":3,"sources":["components.js","components-mson/custom-text-mson.js","mson-app.js","components-ui/custom-text-react.js","components-ui/index.js","from-mson-react/component-utils.js","from-mson-react/inner-component.js","from-mson-react/component.js","from-mson-react/app.js","from-mson-react/app-container.js","from-mson-react/render.js","index.js"],"names":["customTextPage","name","component","text","0","FormLabel","value","style","visibility","TextInput","width","Select","1","SelectItems","2","3","4","app","menu","items","path","label","heading","content","CustomText","_className","props","Object","get","getPrototypeOf","prototype","this","call","set","schema","fields","multiline","docLevel","help","Component","setLayer","components","compiler","registerComponent","additionalComponents","newComponent","ReactText","settings","prefix","item","display","console","log","form","keys","forEach","key","temp","react_default","a","createElement","FormGroup","placeholder","labelText","SelectItem","Form","Button","kind","tabIndex","type","react","React","PureComponent","components_ui","attach","component_utils","getClassName","undefined","isCompiled","getComponent","Parent","constructor","getUIComponent","ancestorName","getOldestCompiledAncestor","Ancestor","InnerComponent","handleChange","_this$props","_this","on","handlerName","charAt","toUpperCase","slice","emitChange","removeListener","addChangeListener","removeChangeListener","prevProps","_this$props2","others","objectWithoutProperties","componentUtils","err","localComponentUtils","assign","state","definition","setState","createComponent","destroy","childProps","comp","inner_component_InnerComponent","App","classCallCheck","possibleConstructorReturn","mobileOpen","menuItem","snackbarOpen","snackbarMessage","confirmationOpen","nextMenuItem","showArchivedToggle","searchStringInput","showSearch","showSearchOnMobile","onNavigate","callback","has","fullScreen","globals","displayConfirmation","title","handleDrawerToggle","handleNavigate","_ref","asyncToGenerator","regenerator_default","mark","_callee","force","wrap","_context","prev","next","Action","run","history","push","stop","_x","_x2","apply","arguments","handleConfirmationClose","_ref2","_callee2","yes","confirmation","_context2","_x3","switchContent","_ref3","_callee3","parameters","isAction","location","parentItem","_this$canArchive","canArchive","canSearch","_context3","emitUnload","route","toRoute","queryString","search","substr","hash","getParent","requireAccess","roles","emitLoad","searchString","showArchived","_x4","_x5","onLocation","pathname","handleSnackbarClose","handleArchivedChange","event","target","checked","window","scrollTo","top","handleSearchStringInputChange","handleSearch","toggleShowSearch","setGlobalOnNavigate","setOnNavigate","redirectPath","getItemAndParsePath","params","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","getFields","Symbol","iterator","done","field","CollectionField","access","return","redirectAfterLogin","emitLoggedOut","canAccess","registrar","client","user","hasRole","displaySnackbar","redirect","navigateTo","_this2","addEventListener","e","emit","_this3","unlisten","listen","Promise","resolve","then","awaitSession","message","_this$state","showArchivedChecked","archivedToggle","Tooltip","Switch","onChange","fullWidth","classes","_this$state2","searchBox","search_bar_default","className","alignRight","onSearch","responsive","isResponsive","IconButton","color","aria-label","onClick","navIconHide","icon_default","icon","Typography","variant","noWrap","onMobile","isWidthDown","bar","Fragment","menuButton","AppBar","elevation","appBar","concat","appBarResponsive","Toolbar","menuAlwaysTemporary","_this$props3","_this$state3","component_Component","menuSidebar","menu_default","onDrawerToggle","fullScreenStyle","marginLeft","marginTop","root","appFrame","contentResponsive","react_router","snackbar_default","open","onClose","confirmation_dialog_default","alert","withStyles","theme","_content","zIndex","overflow","position","height","defineProperty","breakpoints","up","backgroundColor","palette","background","default","padding","spacing","unit","withTheme","withWidth","withRouter","createMuiTheme","primary","blueGrey","secondary","lightBlue","typography","useNextVariants","AppContainer","basename","MuiThemeProvider_default","CssBaseline","react_router_dom","getUserConfirmation","from_mson_react_app","from_mson_react_render","ReactDOM","render","app_container","document","getElementById"],"mappings":"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","file":"static/js/main.fb04ba71.chunk.js","sourcesContent":["export const customTextPage = {\n  name: \"app.CustomTextPage\",\n  component: \"CustomText\",\n  text: {\n    0: {\n      FormLabel: { value: \"First name\", style: { visibility: \"visible\" } },\n      TextInput: {\n        value: \"Eg:jhon\",\n        style: { visibility: \"visible\", width: \"500px\" }\n      },\n      Select: {\n        style: { visibility: \"hidden\" }\n      }\n    },\n    1: {\n      FormLabel: { value: \"Last name\", style: { visibility: \"visible\" } },\n      TextInput: {\n        value: \"Eg:Smith\",\n        style: { visibility: \"visible\", width: \"500px\" }\n      },\n      Select: {\n        style: { visibility: \"hidden\" },\n        SelectItems: {\n          0: {\n            text: \"bengaluru\",\n            value: \"option1\"\n          },\n          1: {\n            text: \"pune\",\n            value: \"option2\"\n          }\n        }\n      }\n    },\n    2: {\n      FormLabel: { value: \"City\", style: { visibility: \"visible\" } },\n      TextInput: {\n        value: \"Eg:Bengaluru\",\n        style: { visibility: \"visible\", width: \"500px\" }\n      },\n      Select: {\n        style: { visibility: \"visible\" }\n      }\n    },\n    3: {\n      FormLabel: { value: \"Phone number\", style: { visibility: \"visible\" } },\n      TextInput: {\n        value: \"Eg:+91 989355\",\n        style: { visibility: \"visible\", width: \"500px\" }\n      },\n      Select: {\n        style: { visibility: \"hidden\" }\n      }\n    },\n    4: {\n      FormLabel: { value: \"Email\", style: { visibility: \"visible\" } },\n      TextInput: {\n        value: \"Eg:jsmith@in.ibm.com\",\n        style: { visibility: \"visible\", width: \"500px\" }\n      },\n      Select: {\n        style: { visibility: \"hidden\" }\n      }\n    }\n  }\n};\n\n// The main app component and the menu option\nexport const app = {\n  name: \"app.App\",\n  component: \"App\",\n  menu: {\n    component: \"Menu\",\n    items: [\n      {\n        // The route to the custom text page\n        path: \"/custom-text\",\n        label: \"Custom Components\",\n        heading: \"Custom Components in MSON\",\n        content: {\n          component: \"app.CustomTextPage\"\n        }\n      }\n    ]\n  }\n};\n","import Component from \"mson/lib/component\";\n\nexport default class CustomText extends Component {\n  _className = \"CustomText\"; // does this mean, the reactclassname?\n\n  _create(props) {\n    super._create(props);\n\n    this.set({\n      schema: {\n        component: \"Form\",\n        fields: [\n          {\n            name: \"text\",\n            component: \"TextField\",\n            label: \"Text\",\n            multiline: true,\n            docLevel: \"basic\",\n            help: \"Any markdown. See markdownguide.org\"\n          },\n          {\n            name: \"input\",\n            component: \"TextField\",\n            label: \"Text\",\n            multiline: true,\n            docLevel: \"basic\",\n            help: \"Any markdown. See markdownguide.org\"\n          }\n        ]\n      }\n    });\n  }\n}\n","// This file is just boilerplate used to register the MSON components and then instantiate the app\n\nimport compiler from 'mson/lib/compiler';\nimport * as components from './components';\nimport * as additionalComponents from './components-mson';\n\nimport Component from 'mson/lib/component';\n//import MSONReactComponent from './component';\n\n// Make sure we only process front-end actions\nComponent.setLayer('frontEnd');\n\n// Register all the components\nfor (let name in components) {\n  let component = components[name];\n  compiler.registerComponent(component.name, component);\n}\n\n// Register the additional components\nfor (let name in additionalComponents) {\n  let component = additionalComponents[name];\n  compiler.registerComponent(component.name, component);\n}\n\n// Intantiate the app\nconst app = compiler.newComponent({\n  component: 'app.App'\n});\n\nexport default app;\n","import React from \"react\";\nimport attach from \"mson-react/lib/attach\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ReactMarkdown from \"react-markdown\";\nimport { settings } from \"carbon-components\";\n\nimport { Grid } from \"carbon-components-react-grid\";\nimport \"carbon-components-react-grid/build/grid.css\";\nimport {\n  Button,\n  TextInput,\n  FormLabel,\n  Form,\n  FormGroup,\n  TextArea,\n  SelectItem,\n  Select,\n  SelectItemGroup\n} from \"carbon-components-react\";\nimport \"./carbon-components.css\";\nimport { Fragment } from \"react\";\nimport { display } from \"@material-ui/system\";\nconst { prefix } = settings;\n\nclass ReactText extends React.PureComponent {\n  getDisplayStyle(item) {\n    var display = item[\"visible\"];\n    console.log(\"display\", display);\n    return display;\n  }\n\n  render() {\n    const buttonStyle = {\n      width: \"100px\",\n      align: \"center\"\n    };\n\n    const labelStyle = {\n      width: \"100px\",\n      align: \"center\",\n      fontSize: \"15px\"\n    };\n\n    const inputStyle = {\n      align: \"center\",\n      fontSize: \"15px\"\n    };\n\n    const { text } = this.props;\n    console.log(text);\n    // const Form = <div></div>;\n    var form = \"\";\n    Object.keys(text).forEach(function(key) {\n      console.log(\"element\", text[key]);\n\n      var temp = (\n        <FormGroup>\n          <FormLabel style={text[key][\"FormLabel\"][\"style\"]}>\n            {text[key][\"FormLabel\"][\"value\"]}\n          </FormLabel>\n          <TextInput\n            style={text[key][\"TextInput\"][\"style\"]}\n            placeholder={text[key][\"TextInput\"][\"value\"]}\n          />\n          <Select style={text[key][\"Select\"][\"style\"]} labelText=\"Select\">\n            <SelectItem text=\"Choose an option\" value=\"placeholder-item\" />\n            {/* { \n            selectItems=text[key][\"Select\"][\"SelectItems\"];\n            Object.keys(selectItems).forEach(function(key){\n              console.log()\n            })\n            \n            } */}\n            {/* <SelectItem text=\"Option 1\" value=\"option-1\" />\n            <SelectItem text=\"Option 2\" value=\"option-2\" /> */}\n          </Select>\n        </FormGroup>\n      );\n      console.log(\"temp\", temp);\n      form = (\n        <div>\n          {form}\n          {temp}\n        </div>\n      );\n    });\n\n    form = (\n      <Form>\n        {form}\n        <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    );\n    // We use component=div to force usage of a div, instead of a p, as properly formatted HTML\n    // cannot nest tags like h1 under a <p>.\n    // const buttons = text.map(item => <Button>{item}</Button>);\n\n    return <Fragment>{form}</Fragment>;\n  }\n}\n\nReactText = attach([\"text\"])(ReactText);\nexport default ReactText;\n","// NOTE: this file should only contain the component registrations\n\nimport CustomText from './custom-text-react';\n\nexport default {\n  CustomText, // export the CustomText react UI component\n};\n","/**\n * Collect mson-react UI components from mson-react/src/components.js\n * and store them in the components variable\n */\nimport components from \"../components-ui/index\";\n\n// Load the compiler\nimport compiler from \"mson/lib/compiler\";\n\n// QUESTION: Is this the key that connects the react-mson react components with the MSON components?\n// ANSWER: Yes. See other notes here.\nclass Utils {\n  /**\n   * get the react component that corresponds to the mson component we wish to display\n   * This function currently gets called from only one place, mson-react/src/inner-component.js\n   *\n   * @param {*} component The component whose UI rendering component we want to look up\n   */\n  getUIComponent(component) {\n    console.log(\"Getting UI Component=================\", component);\n    const name = component.getClassName();\n    const Component = components[name];\n    if (Component !== undefined) {\n      return Component; // when we get here, we have the actual react ui component that will wrap the mson component\n    } else if (compiler.isCompiled(compiler.getComponent(name))) {\n      const Parent = Object.getPrototypeOf(component.constructor);\n      return this.getUIComponent(new Parent());\n    } else {\n      // The React component wasn't found so check the MSON layer to see if we can automatically\n      // determine the component from any MSON.\n      const ancestorName = compiler.getOldestCompiledAncestor(name);\n      const Ancestor = compiler.getComponent(ancestorName);\n      return this.getUIComponent(new Ancestor());\n    }\n  }\n}\n\nexport default new Utils();\n","import React from 'react';\nimport localComponentUtils from './component-utils';\nimport componentUtils from 'mson-react/lib/component-utils';\n\nexport default class InnerComponent extends React.PureComponent {\n  handleChange = (name, value) => {\n    const { on, component } = this.props;\n\n    // Generic handler\n    if (on) {\n      on({ name, value, component });\n    }\n\n    // Handler for specific event\n    const handlerName = 'on' + name.charAt(0).toUpperCase() + name.slice(1);\n    if (this.props[handlerName]) {\n      this.props[handlerName]({ value, component });\n    }\n  };\n\n  addChangeListener() {\n    this.props.component.on('$change', this.handleChange);\n\n    // Emit a mount event so that the component can load any initial data, etc... We emit this event\n    // here and not in componentDidMount() as the component may actually be set after\n    // componentDidMount() was run.\n    this.props.component.emitChange('mount');\n  }\n\n  removeChangeListener() {\n    this.props.component.removeListener('$change', this.handleChange);\n  }\n\n  componentDidMount() {\n    if (this.props.component) {\n      this.addChangeListener();\n    }\n  }\n\n  componentWillUnmount() {\n    // Emit a unmount event so that we can perform any needed clean up\n    this.props.component.emitChange('unmount');\n\n    this.removeChangeListener();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Is the component changing?\n    if (this.props.component !== prevProps.component) {\n      // Recreate the listener\n      this.removeChangeListener();\n      this.addChangeListener();\n    }\n  }\n\n  render() {\n    const { component, ...others } = this.props; // component variable comes from InnerComponent's this.props\n\n    let Component = {}\n\n    if (component) {\n      try {\n        // Try first to find the UI component among mson-react's components \n        Component = componentUtils.getUIComponent(component);\n      }\n      catch(err) {\n        // If that doesn't work, try locally\n        console.log(\"Couldn't find \" + component.get('name') + \" component in mson-react, looking for it locally\");\n        Component = localComponentUtils.getUIComponent(component);        \n      }\n      const retval = <Component component={component} {...others} />\n      return retval;\n    } else {\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport InnerComponent from './inner-component';\nimport compiler from 'mson/lib/compiler';\n\nexport default class Component extends React.PureComponent {\n  state = { component: null };\n\n  createComponent() {\n    const { definition } = this.props; // extract the component definition from the props\n    this.setState({ component: compiler.newComponent(definition) }); // set the component property\n  }\n\n  componentDidMount() {\n    if (this.props.definition) {\n      this.createComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    const { component } = this.state;\n\n    // Did we use a definition to define a component in the state?\n    if (component) {\n      // Fire the unmount before we destroy the component so that the event is not lost\n      component.emitChange('unmount');\n\n      // Remove all listeners to prevent listener leaks\n      this.state.component.destroy();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.definition !== prevProps.definition) {\n      this.createComponent();\n    }\n  }\n\n  render() {\n    //console.log(\"What the heck?\");\n    //console.log('definition',definition); // debugger will stop here.\n    const { definition, component, ...childProps } = this.props;\n    let comp = component;\n\n    // Should we use the component generated from the definition?\n    if (!component) {\n      comp = this.state.component;\n    }\n\n    return <InnerComponent component={comp} {...childProps} />;\n  }\n}\n","// TODO:\n//   - On mobile when using search bar, display title and search icon. When user clicks icon then\n//     hides title and allows for search string to be entered.\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from 'mson-react/lib/icon';\nimport Menu from 'mson-react/lib/menu';\nimport SearchBar from 'mson-react/lib/search-bar';\nimport { Switch, Route } from 'react-router-dom';\n\n\nimport Component from './component'; //local\n//import Component from 'mson-react/lib/component'; //repo\n\n// import compiler from 'mson/lib/compiler';\nimport { withRouter } from 'react-router';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport attach from 'mson-react/lib/attach';\nimport globals from 'mson/lib/globals';\nimport Snackbar from 'mson-react/lib/snackbar';\nimport ConfirmationDialog from 'mson-react/lib/confirmation-dialog';\nimport MUISwitch from '@material-ui/core/Switch';\n// import UserMenu from 'mson-react/lib/user-menu';\nimport Action from 'mson/lib/actions/action';\nimport CollectionField from 'mson/lib/fields/collection-field';\nimport Form from 'mson/lib/form';\nimport access from 'mson/lib/access';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    // height: 430,\n    // marginTop: theme.spacing.unit * 3,\n    zIndex: 1,\n    overflow: 'hidden'\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n  appBar: {\n    position: 'fixed',\n    marginLeft: drawerWidth\n  },\n  appBarResponsive: {\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  navIconHide: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  content: {\n    backgroundColor: theme.palette.background.default,\n    width: '100%',\n    padding: theme.spacing.unit * 3,\n    //padding: '0px',\n    height: 'calc(100% - 56px)',\n    marginTop: 56,\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100% - 64px)',\n      marginTop: 64\n    },\n\n    // Disable Chrome's Scroll Anchoring as it causes problems with inifinite scrolling when\n    // scrolling up. Specifically, the scroll location is locked after items are prepended to the\n    // top of the list before the spacer is resized.\n    overflowAnchor: 'none'\n  },\n  contentResponsive: {\n    // Also needed to extend menu vertically\n    [theme.breakpoints.up('md')]: {\n      marginLeft: drawerWidth\n    }\n  },\n  alignRight: {\n    marginLeft: 'auto' // right align\n  }\n});\n\n// TODO: break up into components for header, menu, body, etc...\nclass App extends React.PureComponent {\n  state = {\n    mobileOpen: false,\n    menuItem: null,\n    snackbarOpen: false,\n    snackbarMessage: '',\n    confirmationOpen: false,\n    nextMenuItem: null,\n    showArchivedToggle: false,\n\n    // Note: we need both searchStringInput and globals.searchString as searchStringInput is the\n    // controlled value for the text input and globals.searchString is the actual string with which\n    // we are searching. These values not the same as we expect the user to submit the search before\n    // it is performed so that we don't search on every keystroke. FUTURE: wait a little bit after\n    // characters have been entered and then automatically search.\n    searchStringInput: '',\n    showSearch: false,\n\n    showSearchOnMobile: false\n\n    // isLoggedIn: false\n  };\n\n  form = null;\n\n  path = null;\n\n  constructor(props) {\n    super(props);\n    this.setGlobalOnNavigate();\n  }\n\n  onNavigate = callback => {\n    // We don't warn about discarding changes when fullScreen, e.g. a login page\n    const menuItem = this.state.menuItem;\n    if (\n      menuItem &&\n      menuItem.content.has('dirty') &&\n      menuItem.content.get('dirty') &&\n      !menuItem.fullScreen\n    ) {\n      // Show a confirmation dialog to see if the user wants to continue\n      globals.displayConfirmation({\n        title: 'Discard changes?',\n        callback\n      });\n    } else {\n      // Nothing is dirty so allow the navigation to continue\n      callback(true);\n    }\n  };\n\n  setGlobalOnNavigate() {\n    globals.setOnNavigate(this.onNavigate);\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n\n  redirect(path) {\n    const { history } = this.props;\n\n    // Clear the redirectPath so that back-to-back redirects to the same route are considered\n    // unique, e.g. if / routes to /somepage and then the user hits back.\n    globals.set({ redirectPath: null });\n\n    history.push(path);\n  }\n\n  navigateTo(path) {\n    const { menuItem } = this.state;\n    const { component } = this.props;\n    const menu = component.get('menu');\n\n    // if (path === '/home') {\n    //   // Redirect so that user sees the actual path and not /home\n    //   history.push(menu.getFirstItem().path);\n    // } else\n    if (!menuItem || path !== menuItem.path) {\n      // if (this.requireAccess(menu.get('roles'))) {\n      // The route is changing\n      const item = menu.getItemAndParsePath(path);\n      return this.switchContent(item.item, item.params);\n      // }\n    }\n  }\n\n  handleNavigate = async (menuItem, force) => {\n    // Is the next item just an action?\n    if (menuItem.content instanceof Action) {\n      // Execute the actions\n      await menuItem.content.run();\n    } else {\n      this.props.history.push(menuItem.path);\n    }\n  };\n\n  handleConfirmationClose = async yes => {\n    const { confirmation } = this.props;\n    if (confirmation.callback && yes) {\n      // Allow/prohibit the route change\n      confirmation.callback(yes);\n    }\n    this.setState({ confirmationOpen: false });\n  };\n\n  //TODO: Update this for the custom CollectionFields\n  canArchive() {\n    let canArchive = false;\n    let canSearch = false;\n    if (this.component && this.component instanceof Form) {\n      for (const field of this.component.getFields()) {\n        if (field instanceof CollectionField) {\n          canArchive =\n            !field.get('forbidViewArchived') &&\n            access.canArchive(field.get('form'));\n          canSearch = !field.get('forbidSearch');\n        }\n      }\n    }\n    return {\n      canArchive,\n      canSearch\n    };\n  }\n\n  emitLoggedOut() {\n    globals.set({ redirectAfterLogin: this.props.location.pathname });\n    this.props.component.emitLoggedOut();\n  }\n\n  requireAccess(roles) {\n    const canAccess =\n      !roles || (registrar.client && registrar.client.user.hasRole(roles));\n    if (!canAccess) {\n      this.emitLoggedOut();\n    }\n    return canAccess;\n  }\n\n  switchContent = async (menuItem, parameters) => {\n    // Prevent inifinite recursion when menuItem is null by making sure that the menuItem is\n    // changing before changing anything, especially the state\n    if (menuItem !== this.state.menuItem) {\n      if (this.component) {\n        // Emit an unload event so that the component can unload any data, etc...\n        this.component.emitUnload();\n      }\n\n      // Note: menuItem can be null if there is no content on the landing page\n      const isAction = menuItem && menuItem.content instanceof Action;\n\n      // Note: menuItem.content can be an action if the user goes directly to a route where the\n      // content is an action\n      if (menuItem && menuItem.content) {\n        const { location, component } = this.props;\n        const menu = component.get('menu');\n        globals.set({\n          route: menu.toRoute({\n            parameters,\n            queryString: location.search.substr(1),\n            hash: location.hash.substr(1)\n          })\n        });\n\n        const parentItem = menu.getParent(menuItem.path);\n        if (\n          this.requireAccess(menuItem.roles) &&\n          (!parentItem || this.requireAccess(parentItem.roles))\n        ) {\n          if (isAction) {\n            // Execute the actions\n            await menuItem.content.run();\n          } else {\n            // Instantiate form\n            // this.component = compiler.newComponent(menuItem.content.component);\n            this.component = menuItem.content;\n\n            // Emit a load event so that the component can load any initial data, etc...\n            this.component.emitLoad();\n\n            const { canArchive, canSearch } = this.canArchive();\n\n            globals.set({ searchString: null });\n\n            // Set showArchived to false whenever we change the route\n            this.setState({\n              menuItem,\n              showArchived: false,\n              showArchivedToggle: canArchive,\n              searchStringInput: '',\n              showSearch: canSearch\n            });\n          }\n        }\n      } else {\n        this.component = null;\n      }\n    }\n  };\n\n  onLocation = location => {\n    globals.set({ path: location.pathname });\n };\n\n  // TODO: move logic to componentDidUpdate\n  componentWillUpdate(props) {\n    const snackbarMessage = globals.get('snackbarMessage');\n    if (snackbarMessage) {\n      this.displaySnackbar(snackbarMessage);\n      globals.set({ snackbarMessage: null });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.redirectPath &&\n      this.props.redirectPath !== prevProps.redirectPath\n    ) {\n      this.redirect(this.props.redirectPath);\n    }\n\n    if (this.props.path !== prevProps.path) {\n      this.navigateTo(this.props.path);\n    }\n\n    if (this.props.confirmation !== prevProps.confirmation) {\n      // Show the popup if any of the confirmation info has changed\n      this.setState({ confirmationOpen: true });\n    }\n\n    if (this.props.searchString !== prevProps.searchString) {\n      // Pass search string down to current component\n      const menuItem = this.state.menuItem;\n      if (menuItem && menuItem.content.has('searchString')) {\n        menuItem.content.set({\n          searchString: this.props.searchString\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    // TODO: is this too inefficient in that it cascades a lot of unecessary events? Instead, could:\n    // 1. move more logic to app layer so that only cascade when need new window 2. use something\n    // like a global scroll listener that the component can use when it is active\n    window.addEventListener('scroll', e => {\n      if (this.state.menuItem) {\n        this.state.menuItem.content.emit('scroll', e);\n      }\n    });\n\n    // Handle immediate redirects, e.g. if user is not logged in\n    if (this.props.redirectPath) {\n      this.redirect(this.props.redirectPath);\n    }\n  }\n\n  componentWillMount() {\n    // Allows us to listen to back and forward button clicks\n    this.unlisten = this.props.history.listen(this.onLocation);\n\n    Promise.resolve()\n      .then(() => {\n        if (registrar.client) {\n          // Wait for the session to load before loading the initial component so that we can do things\n          // like route based on a user's role\n          registrar.client.user.awaitSession();\n        }\n      })\n      .then(() => {\n        // Load the correct component based on the initial path\n        this.onLocation(this.props.location);\n      });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  displaySnackbar(message) {\n    this.setState({ snackbarOpen: true, snackbarMessage: message });\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({ snackbarOpen: false });\n  };\n\n  handleArchivedChange = event => {\n    this.setState({ showArchived: event.target.checked });\n\n    const { menuItem } = this.state;\n\n    if (menuItem) {\n      menuItem.content.set({ showArchived: event.target.checked });\n\n      // Scroll to the top of the page as otherwise it is confusing to the user as to why they are\n      // dumped in some random place within the newly queried data.\n      window.scrollTo({\n        top: 0\n      });\n    }\n  };\n\n  handleSearchStringInputChange = searchStringInput => {\n    this.setState({\n      searchStringInput\n    });\n  };\n\n  handleSearch = searchStringInput => {\n    this.setState(\n      {\n        searchStringInput\n      },\n      () => {\n        globals.set({\n          searchString: searchStringInput ? searchStringInput : null\n        });\n      }\n    );\n  };\n\n  archivedToggle() {\n    const { showArchived, showArchivedToggle } = this.state;\n\n    // A component must not switch from controlled to uncontrolled so we need to avoid setting\n    // checked=undefined\n    const showArchivedChecked = showArchived ? true : false;\n\n    let archivedToggle = null;\n    if (showArchivedToggle) {\n      archivedToggle = (\n        <Tooltip title={showArchived ? 'Show Active' : 'Show Deleted'}>\n          <MUISwitch\n            onChange={this.handleArchivedChange}\n            checked={showArchivedChecked}\n          />\n        </Tooltip>\n      );\n    }\n\n    return archivedToggle;\n  }\n\n  searchBox(fullWidth) {\n    const { classes } = this.props;\n    const { searchStringInput, showSearch } = this.state;\n\n    let searchBox = null;\n    if (showSearch) {\n      searchBox = (\n        <SearchBar\n          fullWidth={fullWidth}\n          className={classes.alignRight}\n          searchString={searchStringInput}\n          onChange={this.handleSearchStringInputChange}\n          onSearch={this.handleSearch}\n        />\n      );\n    }\n    return searchBox;\n  }\n\n  toggleShowSearch = () => {\n    this.setState({ showSearchOnMobile: !this.state.showSearchOnMobile });\n  };\n\n  menuButton() {\n    const { classes } = this.props;\n    const responsive = this.isResponsive();\n    return (\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={this.handleDrawerToggle}\n        className={responsive ? classes.navIconHide : ''}\n      >\n        <Icon icon=\"Menu\" />\n      </IconButton>\n    );\n  }\n\n  title() {\n    const { menuItem } = this.state;\n    return (\n      <Typography variant=\"h6\" color=\"inherit\" noWrap>\n        {menuItem ? menuItem.label : ''}\n      </Typography>\n    );\n  }\n\n  appBar() {\n    const { classes, width } = this.props;\n    const { showSearchOnMobile } = this.state;\n\n    const onMobile = isWidthDown('sm', width);\n    const responsive = this.isResponsive();\n\n    let bar = null;\n\n    if (onMobile) {\n      if (showSearchOnMobile) {\n        bar = (\n          <React.Fragment>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"close search\"\n              onClick={this.toggleShowSearch}\n            >\n              <Icon icon=\"ArrowBack\" />\n            </IconButton>\n            {this.searchBox(true)}\n          </React.Fragment>\n        );\n      } else {\n        bar = (\n          <React.Fragment>\n            {this.menuButton()}\n            {this.title()}\n            {this.archivedToggle()}\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"toggle search\"\n              onClick={this.toggleShowSearch}\n              className={classes.alignRight}\n            >\n              <Icon icon=\"Search\" />\n            </IconButton>\n          </React.Fragment>\n        );\n      }\n    } else {\n      bar = (\n        <React.Fragment>\n          {this.menuButton()}\n          {this.title()}\n          {this.archivedToggle()}\n          {this.searchBox()}\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <AppBar\n        elevation={1} // tone down the elevation\n        className={\n          classes.appBar + (responsive ? ` ${classes.appBarResponsive}` : '')\n        }\n      >\n        <Toolbar>{bar}</Toolbar>\n      </AppBar>\n    );\n  }\n\n  isResponsive() {\n    return !this.props.menuAlwaysTemporary;\n  }\n\n  render() {\n    const { classes, component, confirmation } = this.props;\n    const {\n      mobileOpen,\n      menuItem,\n      snackbarOpen,\n      snackbarMessage,\n      confirmationOpen\n    } = this.state;\n\n    const responsive = this.isResponsive();\n\n    const menu = component.get('menu');\n\n    // Use the path from the location prop as this.state.path may not be up to date\n    const path = this.props.location.pathname;\n\n    const comp = this.component ? (\n      <Component component={this.component} />\n    ) : null;\n\n    const appBar = this.appBar();\n\n    const menuSidebar = (\n      <Menu\n        component={menu}\n        onDrawerToggle={this.handleDrawerToggle}\n        mobileOpen={mobileOpen}\n        onNavigate={this.handleNavigate}\n        path={path}\n        responsive={responsive}\n      />\n    );\n\n    let fullScreenStyle = null;\n    if (menuItem && menuItem.fullScreen) {\n      fullScreenStyle = {\n        marginLeft: 0,\n        marginTop: 0\n      };\n    }\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          {menuItem && menuItem.fullScreen ? null : appBar}\n          {menuItem && menuItem.fullScreen ? null : menuSidebar}\n          <main\n            className={\n              classes.content +\n              (responsive ? ` ${classes.contentResponsive}` : '')\n            }\n            style={fullScreenStyle}\n          >\n            <Switch>\n              {/* Omitting path so that all paths are matched */}\n              <Route />\n            </Switch>\n\n            {comp}\n\n            <Snackbar\n              open={snackbarOpen}\n              message={snackbarMessage}\n              onClose={this.handleSnackbarClose}\n            />\n            <ConfirmationDialog\n              open={confirmationOpen}\n              onClose={this.handleConfirmationClose}\n              title={confirmation ? confirmation.title : null}\n              text={confirmation ? confirmation.text : null}\n              alert={confirmation ? confirmation.alert : null}\n            />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp = withStyles(styles, { withTheme: true })(App);\nApp = withWidth()(App);\nApp = withRouter(App);\nApp = attach(['menuAlwaysTemporary'])(App);\nApp = attach(\n  ['path', 'redirectPath', 'snackbarMessage', 'confirmation', 'searchString'],\n  globals\n)(App);\nexport default App;\n","import React from 'react';\n\n\nimport AppUI from './app'; // local\n//import AppUI from 'mson-react/lib/app'; //repo\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport { BrowserRouter, Prompt } from 'react-router-dom';\nimport globals from 'mson/lib/globals';\n\n//import attach from './attach'; // local\nimport attach from 'mson-react/lib/attach'; // repo\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey,\n    // primary: blue,\n    // type: 'dark',\n    // secondary: cyan\n    secondary: lightBlue\n  },\n\n  // TODO: remove after next major Material-UI release\n  // (https://material-ui.com/style/typography/#migration-to-typography-v2)\n  typography: {\n    useNextVariants: true\n  }\n\n  // shadows: ['none']\n});\n\n// Note: BrowserRouter needs to be outside of App so that we can use withRouter\nclass AppContainer extends React.Component {\n  onNavigate = (message, callback) => {\n    globals.onNavigate(message, callback);\n  };\n\n  render() {\n    const { component, basename } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter\n          getUserConfirmation={this.onNavigate}\n          basename={basename}\n        >\n          {/* Wrapping div required by BrowserRouter */}\n          <div>\n            <AppUI component={component} />\n\n            {/* A Prompt is needed to capture back/forward button events with ReactRouter. message\n            is required, but the value is arbitrary */}\n            <Prompt message=\"foo\" />\n          </div>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default attach(['basename'])(AppContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './app-container';\nimport registrar from 'mson/lib/compiler/registrar';\n\n//import registerServiceWorker from './register-service-worker'; //local\nimport registerServiceWorker from 'mson-react/lib/register-service-worker'; //repo\n\n\n//import unregisterServiceWorker from './unregister-service-worker';\n\nexport default async app => {\n  // Was the client registered?\n  if (registrar.client) {\n    // Make sure we load the session before doing any rendering so that components can do their\n    // initial rendering based on the user's authentication status\n    await registrar.client.user.awaitSession();\n  }\n\n  ReactDOM.render(\n    <AppContainer component={app} />,\n    document.getElementById('root')\n  );\n  //registerServiceWorker(); //change to registerServiceWorker when ready for production\n};\n","import app from './mson-app';\n\n\nimport { render } from './from-mson-react/bundle';\n//import { render } from './render';\n\nimport 'typeface-roboto';\n\n// Render the app\nrender(app);"],"sourceRoot":""}